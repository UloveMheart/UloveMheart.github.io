{"pages":[{"title":"about","text":"","link":"/about/index.html"},{"title":"My Works","text":"","link":"/works/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/05/11/hello-world/"},{"title":"从__Hello World__说起C语言","text":"C语言不是最早的编程语言，也不算最好用的语言，但却是世界上用途最为广泛的语言。 #第一个程序：Hello World 1234567#include &lt;stdio.h&gt;int main(){ printf(\"hello world\\n\"); return 0;} 先上代码，作为最简单的C程序，hello world只需要4行代码即可在命令行中输出字样 hello world 当然，对于诸如python等语言来说，这样简单的程序甚至只需要1行。那么，为什么还会存在_C_语言这样的”复杂”的语言呢？ 程序分析头文件 #include&lt;stdio.h&gt; 第一行的代码中#代表了这是一条预编译语句 include则是代表这条指令的含义是将一个库文件纳入编译，通俗的说，你可以使用一些已经写好的C语言函数。 而&lt;stdio.h&gt;代表这个库文件叫做stdio.h，编译器自动在预先存储的库文件路径以及当前文件所在位置中去寻找这个库文件并将其编译。 PS.如果这个库文件是由自己编写，那么在包含的时候应用“”而不是&lt;&gt;。 main函数 int main(void)这一行代码包括了三个部分，分别是int，main和(void)先说int，int是一种数据类型，代表整数（integer），在这里表示后续的函数的返回值是一个int类型。再说main，main就是一个名字，表示这个函数的名称，不过，main函数比较特别，它是默认的c程序入口，也就是说，当c程序编译完成后开始执行，将要执行的第一行代码就是main函数中的内容。然后是（void),_()_,表示这是一个函数，括号内容为向函数内传递的参数，参数可以有多个，每个参数之间需要用逗号分隔。_ void_的意思是空，也就是不需要参数的意思。如果执行环境是在命令行下，还可以将void替换为int args, char argv[]，便可以在运行程序时用命令行传递参数了。 ###输出函数 printf(“hello world\\n”) ;这行代码的意思是输出字符串hello world，并提行。那么，这是怎么做到的呢？在上面我们说明了_()_代表一个函数，也就是说，printf()是一个 C语言特性","link":"/2019/05/13/第一个程序：Hello World/"}],"tags":[],"categories":[]}